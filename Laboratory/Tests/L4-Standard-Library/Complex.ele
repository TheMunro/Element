#MandelbrotIterationState -> iteration:num, z:Complex;
#
#Mandelbrot(x:num, y:num, width:num, height:num, maxIterations:num, maxExtent:num):num
#{
#    scale = mul(2, div(maxExtent, min(width, height)));
#    c = Complex(mul(sub(x, div(width, 2)), scale),
#                mul(sub(div(height, 2), y), scale));
#
#    state = MandelbrotIterationState(0, Complex(0, 0));
#    condition(state) = and(lt(state.iteration, maxIterations), lt(ComplexNorm(state.z), sqr(maxExtent)));
#    body(state) = MandelbrotIterationState(
#        add(state.iteration, 1),
#        ComplexAdd(ComplexMul(state.z, state.z), c)
#    );
#    result = for(state, condition, body);
#    return = if(lt(result.iteration, maxIterations), div(result.iteration, maxIterations), 0);
#}