intrinsic struct Num
{
	intrinsic function add(a:Num, b:Num):Num
	intrinsic function mul(a:Num, b:Num):Num
	intrinsic function div(a:Num, b:Num):Num
	
	intrinsic function acos(a:Num):Num
	
    pi = 3.14159265359
	degrees(theta:Num):Num = theta.mul(180.div(pi))
	
	addFive(a:Num) = 5.add(a)
	addTen(a) = a.add(10) # Cannot be used as an instance function since first argument is not explicitly Num
	
	struct NumNum(n:Num)
	{
		addNumNum(a:NumNum, b:Num) = Num(a).add(b)
	}
}
struct NumNum(n:Num)
struct NumNumNum(n:NumNum)

struct MyStruct(a)
MyInstance = MyStruct(5)
struct NestedStruct(m:MyStruct)
struct Vector3(x:Num, y:Num, z:Num)
{
	add(a:Vector3, b:Vector3) = Vector3(a.x.add(b.x), a.y.add(b.y), a.z.add(b.z))
}

pickSecond(a, b) = b
onlyNum(a:Num) = a
onlyNumNum(a:NumNum) = a
onlyNumNumNum(a:NumNumNum) = a